matrix:
  allow_failures:
    - os: osx
  include:
    - os: osx
      language: generic
    - os: linux
      language: python
      python: "3.6"
#cache:
#  apt: true
#  directories:
#    - $HOME/miniconda
services:
  - xvfb
before_install:
  # install miniconda for Python dependencies
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda -f
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda config --add channels defaults
  - conda config --add channels bioconda
  - conda config --add channels conda-forge
  - conda info -a
  # if matplotlib functionality is tested
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then ( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok )& fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then ulimit -S -n 4096; ulimit -a; fi
install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      conda env create -q -f conda_env.osx.txt -n gimme;
    else
      conda env create -q -f conda_env.dev.txt -n gimme;
    fi
  - conda activate gimme
  - python setup.py build && pip install -e .
#  - pip install coveralls
# # command to run tests, e.g. python setup.py test
script:  
  - black --check gimmemotifs/ setup.py scripts/
  - flake8 setup.py gimmemotifs/ scripts/
  - python -c 'from gimmemotifs.config import CACHE_DIR;print(CACHE_DIR)'
  - py.test 

#after_sucess:
#  coveralls
